{
	"name": "run-on-save",
	"displayName": "Run on Save",
	"description": "Run configured shell commands when a file is saved in vscode, and output configured messages on status bar.",
	"icon": "images/logo.png",
	"version": "1.10.2",
	"license": "MIT",
	"publisher": "pucelle",
	"homepage": "https://github.com/pucelle/vscode-run-on-save",
	"repository": {
		"type": "git",
		"url": "https://github.com/pucelle/vscode-run-on-save"
	},
	"bugs": {
		"url": "https://github.com/pucelle/vscode-run-on-save/issues"
	},
	"engines": {
		"vscode": "^1.81.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"run on save",
		"save and run",
		"compile scss on save",
		"compile less on save",
		"compile files on save"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.enableRunOnSave",
				"title": "Run On Save: Enable"
			},
			{
				"command": "extension.disableRunOnSave",
				"title": "Run On Save: Disable"
			}
		],
		"configuration": {
			"title": "Run On Save",
			"type": "object",
			"properties": {
				"runOnSave.statusMessageTimeout": {
					"type": "number",
					"description": "Specify the timeout in millisecond after which the status message will be hidden. Works when `runIn=backend`, can be overwritten by the `statusMessageTimeout` in each command.",
					"default": 3000
				},
				"runOnSave.ignoreFilesBy": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							".gitignore",
							".npmignore"
						]
					},
					"default": [],
					"description": "Specifies it to ignore files list in `.gitignore` or `.npmignore`."
				},
				"runOnSave.shell": {
					"type": "string",
					"description": "Specify what shell will be used for all the commands. Default is vscode's default shell.",
					"default": null
				},
				"runOnSave.defaultRunIn": {
					"type": "string",
					"description": "Run command in which environment by default. Default value is `backend`.",
					"enum": [
						"backend",
						"terminal",
						"vscode"
					],
					"default": "backend",
					"enumDescriptions": [
						"Run command silently and output messages to output channel, you can specify `runningStatusMessage` and `finishStatusMessage` to give you feedback. Choose this when you don't want to be disturbed.",
						"Run command in vscode terminal, which keeps message colors. Choose this when you want to get command feedback details.",
						"Run vscode's command. Choose this if you want to execute vscode's own command or a command from a installed vscode extension."
					]
				},
				"runOnSave.onlyRunOnManualSave": {
					"type": "boolean",
					"description": "Only run commands when manually saving a file. Default value is `false`.",
					"default": false
				},
				"runOnSave.commands": {
					"type": "array",
					"description": "Shell commands array.",
					"default": [],
					"items": {
						"type": "object",
						"properties": {
							"languages": {
								"type": "array",
								"description": "Specify an array of languageIds for which this command applies to.",
								"default": [],
								"uniqueItems": true,
								"items": {
									"type": "string",
									"examples": [
										"abap",
										"bat",
										"bibtex",
										"clojure",
										"coffeescript",
										"c",
										"cpp",
										"csharp",
										"dockercompose",
										"css",
										"cuda-cpp",
										"d",
										"dart",
										"pascal",
										"diff",
										"dockerfile",
										"erlang",
										"fsharp",
										"git-rebase",
										"go",
										"groovy",
										"handlebars",
										"haml",
										"haskell",
										"html",
										"ini",
										"java",
										"javascript",
										"javascriptreact",
										"json",
										"jsonc",
										"julia",
										"latex",
										"less",
										"lua",
										"makefile",
										"markdown",
										"objective-c",
										"objective-cpp",
										"ocaml",
										"pascal",
										"perl6",
										"php",
										"plaintext",
										"powershell",
										"pug",
										"python",
										"r",
										"razor",
										"ruby",
										"rust",
										"syntax)",
										"shaderlab",
										"shellscript",
										"slim",
										"sql",
										"stylus",
										"svelte",
										"swift",
										"typescript",
										"typescriptreact",
										"tex",
										"vb",
										"vue",
										"vue-html",
										"xml",
										"xsl",
										"yaml"
									]
								}
							},
							"match": {
								"type": "string",
								"description": "Specify a RegExp source to match file path. Note if specifies both `match` and `globMatch`, commands matched them both will be executed.",
								"default": ""
							},
							"notMatch": {
								"type": "string",
								"description": "Specify a RegExp source, the files whole path match it will be excluded.",
								"default": ""
							},
							"globMatch": {
								"type": "string",
								"description": "Specify a glob expression to match file path. reference to: https://github.com/isaacs/node-glob#glob-primer. Note if specifies both `match` and `globMatch`, only commands matched them both will be executed.",
								"default": ""
							},
							"doNotDisturb": {
								"type": "boolean",
								"description": "By default, output tab would get focus after receiving non-zero exit codes. Set this option to `true` can prevent it. Only works when `runIn=backend` or `runIn=terminal`.",
								"default": false
							},
							"globMatchOpts": {
								"type": "object",
								"description": "https://github.com/isaacs/minimatch/blob/0569cd3373408f9d701d3aab187b3f43a24a0db7/src/index.ts#L20",
								"additionalProperties": false,
								"properties": {
									"allowWindowsEscape": {
										"type": "boolean"
									},
									"debug": {
										"type": "boolean"
									},
									"dot": {
										"type": "boolean"
									},
									"flipNegate": {
										"type": "boolean"
									},
									"magicalBraces": {
										"type": "boolean"
									},
									"matchBase": {
										"type": "boolean"
									},
									"nobrace": {
										"type": "boolean"
									},
									"nocase": {
										"type": "boolean"
									},
									"nocaseMagicOnly": {
										"type": "boolean"
									},
									"nocomment": {
										"type": "boolean"
									},
									"noext": {
										"type": "boolean"
									},
									"noglobstar": {
										"type": "boolean"
									},
									"nonegate": {
										"type": "boolean"
									},
									"nonull": {
										"type": "boolean"
									},
									"optimizationLevel": {
										"type": "number"
									},
									"partial": {
										"type": "boolean"
									},
									"platform": {
										"enum": [
											"aix",
											"android",
											"darwin",
											"freebsd",
											"haiku",
											"linux",
											"openbsd",
											"sunos",
											"win32",
											"cygwin",
											"netbsd"
										],
										"type": "string"
									},
									"preserveMultipleSlashes": {
										"type": "boolean"
									},
									"windowsNoMagicRoot": {
										"type": "boolean"
									},
									"windowsPathsNoEscape": {
										"type": "boolean"
									}
								}
							},
							"commandBeforeSaving": {
								"type": "string",
								"description": "Specify the command to be executed before saving the file. Note that for backend command, file will be saved after command executed completed.",
								"default": "echo ${file}"
							},
							"command": {
								"type": "string",
								"description": "Specify the command to be executed after file saved.",
								"default": "echo ${file}"
							},
							"args": {
								"type": [
									"string",
									"array",
									"object"
								],
								"description": "Specify the command parameters, can be a string, array of string, or an object. Note for a `backend` or `terminal` command, if args option is defined as array of string, or an object, will format argument to add quotes if needed. e.g., `['-a', 'Value 1']` will be formatted as `-a \"Value 1\"`",
								"default": ""
							},
							"runIn": {
								"type": "string",
								"description": "Run command in which environment, if not specified, uses `runOnSave.defaultRunIn`.",
								"enum": [
									"backend",
									"terminal",
									"vscode"
								],
								"default": "backend",
								"enumDescriptions": [
									"Run command silently and output messages to output channel, you can specify `runningStatusMessage` and `finishStatusMessage` to give you feedback. Choose this when you don't want to be disturbed.",
									"Run command in vscode terminal, which keeps message colors. Choose this when you want to get command feedback details.",
									"Run vscode's command. Choose this if you want to execute vscode's own command or a command from a installed vscode extension."
								]
							},
							"async": {
								"type": "boolean",
								"description": "All the commands with `async: false` will run in a sequence, means run next after previous completed. Default value is `true`.",
								"default": true
							},
							"runningStatusMessage": {
								"type": "string",
								"description": "Specify the status bar message when the shell command began to run. Only works when `runIn=backend`.",
								"default": ""
							},
							"finishStatusMessage": {
								"type": "string",
								"description": "Specify the status bar message after the shell command finished executing. Only works when `runIn=backend`.",
								"default": ""
							},
							"statusMessageTimeout": {
								"type": "number",
								"description": "Specify the timeout in millisecond after which the status message will hide. Only works when `runIn=backend`.",
								"default": 3000
							},
							"terminalHideTimeout": {
								"type": "number",
								"description": "Specify the timeout in millisecond after which the terminal for running current command will hide. Only works when `runIn=terminal`. If default value is `-1`, set it as a value `>=0` can make it work.",
								"default": -1
							},
							"workingDirectoryAsCWD": {
								"type": "boolean",
								"description": "Specify the vscode working directory as shell CWD (Current Working Directory). Only works when `runIn=backend`.",
								"default": true
							},
							"clearOutput": {
								"type": "boolean",
								"description": "Clear the output channel before running. Default value is `false`.",
								"default": false
							}
						}
					}
				},
				"runOnSave.commandsBeforeSaving": {
					"type": "array",
					"description": "Shell commands array, just like `runOnSave.commands`, but runs before saving documents.",
					"default": [],
					"items": {
						"type": "object",
						"properties": {
							"languages": {
								"type": "array",
								"description": "Specify an array of language ids for which this command applies to.",
								"default": [],
								"uniqueItems": true,
								"items": {
									"type": "string",
									"examples": [
										"abap",
										"bat",
										"bibtex",
										"clojure",
										"coffeescript",
										"c",
										"cpp",
										"csharp",
										"dockercompose",
										"css",
										"cuda-cpp",
										"d",
										"dart",
										"pascal",
										"diff",
										"dockerfile",
										"erlang",
										"fsharp",
										"git-rebase",
										"go",
										"groovy",
										"handlebars",
										"haml",
										"haskell",
										"html",
										"ini",
										"java",
										"javascript",
										"javascriptreact",
										"json",
										"jsonc",
										"julia",
										"latex",
										"less",
										"lua",
										"makefile",
										"markdown",
										"objective-c",
										"objective-cpp",
										"ocaml",
										"pascal",
										"perl6",
										"php",
										"plaintext",
										"powershell",
										"pug",
										"python",
										"r",
										"razor",
										"ruby",
										"rust",
										"syntax",
										"shaderlab",
										"shellscript",
										"slim",
										"sql",
										"stylus",
										"svelte",
										"swift",
										"typescript",
										"typescriptreact",
										"tex",
										"vb",
										"vue",
										"vue-html",
										"xml",
										"xsl",
										"yaml"
									]
								}
							},
							"match": {
								"type": "string",
								"description": "Specify a RegExp source to match file path. Note if specifies both `match` and `globMatch`, commands matched them both will be executed.",
								"default": ""
							},
							"notMatch": {
								"type": "string",
								"description": "Specify a RegExp source, the files whole path match it will be excluded.",
								"default": ""
							},
							"globMatch": {
								"type": "string",
								"description": "Specify a glob expression to match file path. reference to: https://github.com/isaacs/node-glob#glob-primer. Note if specifies both `match` and `globMatch`, only commands matched them both will be executed.",
								"default": ""
							},
							"globMatchOpts": {
								"type": "object",
								"description": "https://github.com/isaacs/minimatch/blob/0569cd3373408f9d701d3aab187b3f43a24a0db7/src/index.ts#L20",
								"additionalProperties": false,
								"properties": {
									"allowWindowsEscape": {
										"type": "boolean"
									},
									"debug": {
										"type": "boolean"
									},
									"dot": {
										"type": "boolean"
									},
									"flipNegate": {
										"type": "boolean"
									},
									"magicalBraces": {
										"type": "boolean"
									},
									"matchBase": {
										"type": "boolean"
									},
									"nobrace": {
										"type": "boolean"
									},
									"nocase": {
										"type": "boolean"
									},
									"nocaseMagicOnly": {
										"type": "boolean"
									},
									"nocomment": {
										"type": "boolean"
									},
									"noext": {
										"type": "boolean"
									},
									"noglobstar": {
										"type": "boolean"
									},
									"nonegate": {
										"type": "boolean"
									},
									"nonull": {
										"type": "boolean"
									},
									"optimizationLevel": {
										"type": "number"
									},
									"partial": {
										"type": "boolean"
									},
									"platform": {
										"enum": [
											"aix",
											"android",
											"darwin",
											"freebsd",
											"haiku",
											"linux",
											"openbsd",
											"sunos",
											"win32",
											"cygwin",
											"netbsd"
										],
										"type": "string"
									},
									"preserveMultipleSlashes": {
										"type": "boolean"
									},
									"windowsNoMagicRoot": {
										"type": "boolean"
									},
									"windowsPathsNoEscape": {
										"type": "boolean"
									}
								}
							},
							"commandBeforeSaving": {
								"type": "string",
								"description": "Specify the command to be executed before saving the file. Note that for backend command, file will be saved after command executed completed.",
								"default": "echo ${file}"
							},
							"command": {
								"type": "string",
								"description": "Specify the command to be executed after file saved.",
								"default": "echo ${file}"
							},
							"args": {
								"type": [
									"string",
									"array",
									"object"
								],
								"description": "Specify the command parameters, can be a string, array of string, or an object. Note for a `backend` or `terminal` command, if args option is defined as array of string, or an object, will format argument to add quotes if needed. e.g., `['-a', 'Value 1']` will be formatted as `-a \"Value 1\"`",
								"default": ""
							},
							"runIn": {
								"type": "string",
								"description": "Run command in.",
								"enum": [
									"backend",
									"terminal",
									"vscode"
								],
								"default": "backend",
								"enumDescriptions": [
									"Run command silently and output messages to output channel, you can specify `runningStatusMessage` and `finishStatusMessage` to give you feedback. Choose this when you don't want to be disturbed.",
									"Run command in vscode terminal, which keeps message colors. Choose this when you want to get command feedback details.",
									"Run vscode's command. Choose this if you want to execute vscode's own command or a command from a installed vscode extension."
								]
							},
							"async": {
								"type": "boolean",
								"description": "All the commands with `async: false` will run in a sequence, means run next after previous completed. Default value is `true`.",
								"default": true
							},
							"runningStatusMessage": {
								"type": "string",
								"description": "Specify the status bar message when the shell command began to run. Only works when `runIn=backend`.",
								"default": ""
							},
							"finishStatusMessage": {
								"type": "string",
								"description": "Specify the status bar message after the shell command finished executing. Only works when `runIn=backend`.",
								"default": ""
							},
							"statusMessageTimeout": {
								"type": "number",
								"description": "Specify the timeout in millisecond after which the status message will hide. Only works when `runIn=backend`.",
								"default": 3000
							},
							"terminalHideTimeout": {
								"type": "number",
								"description": "Specify the timeout in millisecond after which the terminal for running current command will hide. Only works when `runIn=terminal`. If default value is `-1`, set it as a value `>=0` can make it work.",
								"default": -1
							},
							"workingDirectoryAsCWD": {
								"type": "boolean",
								"description": "Specify the vscode working directory as shell CWD (Current Working Directory). Only works when `runIn=backend`.",
								"default": true
							},
							"clearOutput": {
								"type": "boolean",
								"description": "Clear the output channel before running. Default value is `false`.",
								"default": false
							},
							"doNotDisturb": {
								"type": "boolean",
								"description": "By default, output tab would get focus after receiving non-zero exit codes. Set this option to `true` can prevent it. Only works when `runIn=backend` or `runIn=terminal`.",
								"default": false
							}
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run build",
		"package": "npx @vscode/vsce package",
		"build": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"test": "cd test && tsc -b && vscode-test"
	},
	"devDependencies": {
		"@types/fs-extra": "^11.0.1",
		"@types/mocha": "^2.2.48",
		"@types/node": "^20.5.4",
		"@types/vscode": "^1.81.0",
		"@vscode/test-cli": "0.0.4",
		"@vscode/test-electron": "^2.3.8",
		"typescript": "^4.9.5"
	},
	"dependencies": {
		"fs-extra": "^11.1.1",
		"minimatch": "^10.0.1"
	}
}